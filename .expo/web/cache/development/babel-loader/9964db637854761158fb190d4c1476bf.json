{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getDoc } from \"firebase/firestore\";\nimport { Provider } from \"react-redux\";\nimport { collection, addDoc, setDoc, db, doc, getDocs } from \"./config\";\nexport var fetchUser = function fetchUser(uid) {\n  var docRef, docData;\n  return _regeneratorRuntime.async(function fetchUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          docRef = doc(db, \"users\", \"\" + uid);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getDoc(docRef));\n\n        case 4:\n          docData = _context.sent;\n          return _context.abrupt(\"return\", docData.data());\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var addNotes = function addNotes(uid, data) {\n  try {\n    var docRef = doc(db, \"users\", \"\" + uid);\n    var colRef = collection(docRef, \"notes\");\n    addDoc(colRef, {\n      note: data\n    });\n    console.log(\"Note Added Successfully\");\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport var fetchNotes = function fetchNotes(uid) {\n  var docRef, colRef, snapshot;\n  return _regeneratorRuntime.async(function fetchNotes$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          docRef = doc(db, \"users\", \"\" + uid);\n          colRef = collection(docRef, \"notes\");\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(getDocs(colRef));\n\n        case 5:\n          snapshot = _context2.sent;\n          snapshot.forEach(function (doc) {\n            console.log(doc);\n          });\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var addUser = function addUser(user) {\n  var displayName, email, uid;\n  return _regeneratorRuntime.async(function addUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          displayName = user.displayName, email = user.email, uid = user.uid;\n          console.log(user);\n          _context3.prev = 2;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(setDoc(doc(db, \"users\", \"\" + uid), {\n            uid: uid,\n            name: displayName || \"\",\n            email: email\n          }));\n\n        case 5:\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](2);\n          console.log(_context3.t0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[2, 7]], Promise);\n};","map":{"version":3,"sources":["C:/Users/daxsh/Desktop/Coding Project/React Naative Projects/firenotes/firebase/userfunctions.js"],"names":["getDoc","Provider","collection","addDoc","setDoc","db","doc","getDocs","fetchUser","uid","docRef","docData","data","console","log","addNotes","colRef","note","err","fetchNotes","snapshot","forEach","addUser","user","displayName","email","name"],"mappings":";AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,EAArC,EAAyCC,GAAzC,EAA8CC,OAA9C;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,UAAAA,MAFe,GAENJ,GAAG,CAACD,EAAD,EAAK,OAAL,OAAiBI,GAAjB,CAFG;AAAA;AAAA,2CAGCT,MAAM,CAACU,MAAD,CAHP;;AAAA;AAGfC,UAAAA,OAHe;AAAA,2CAIdA,OAAO,CAACC,IAAR,EAJc;;AAAA;AAAA;AAAA;AAMrBC,UAAAA,OAAO,CAACC,GAAR;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAUP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACN,GAAD,EAAMG,IAAN,EAAe;AACrC,MAAI;AACF,QAAMF,MAAM,GAAGJ,GAAG,CAACD,EAAD,EAAK,OAAL,OAAiBI,GAAjB,CAAlB;AACA,QAAMO,MAAM,GAAGd,UAAU,CAACQ,MAAD,EAAS,OAAT,CAAzB;AACAP,IAAAA,MAAM,CAACa,MAAD,EAAS;AACbC,MAAAA,IAAI,EAAEL;AADO,KAAT,CAAN;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,CAXM;AAaP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOV,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBC,UAAAA,MAFgB,GAEPJ,GAAG,CAACD,EAAD,EAAK,OAAL,OAAiBI,GAAjB,CAFI;AAGhBO,UAAAA,MAHgB,GAGPd,UAAU,CAACQ,MAAD,EAAS,OAAT,CAHH;AAAA;AAAA,2CAICH,OAAO,CAACS,MAAD,CAJR;;AAAA;AAIhBI,UAAAA,QAJgB;AAKtBA,UAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACf,GAAD,EAAS;AACxBO,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACD,WAFD;AALsB;AAAA;;AAAA;AAAA;AAAA;AAStBO,UAAAA,OAAO,CAACC,GAAR;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAaP,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,WADa,GACeD,IADf,CACbC,WADa,EACAC,KADA,GACeF,IADf,CACAE,KADA,EACOhB,GADP,GACec,IADf,CACOd,GADP;AAErBI,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAFqB;AAAA;AAAA,2CAIbnB,MAAM,CAACE,GAAG,CAACD,EAAD,EAAK,OAAL,OAAiBI,GAAjB,CAAJ,EAA6B;AACvCA,YAAAA,GAAG,EAAEA,GADkC;AAEvCiB,YAAAA,IAAI,EAAEF,WAAW,IAAI,EAFkB;AAGvCC,YAAAA,KAAK,EAAEA;AAHgC,WAA7B,CAJO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUnBZ,UAAAA,OAAO,CAACC,GAAR;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import { getDoc } from \"firebase/firestore\";\r\nimport { Provider } from \"react-redux\";\r\nimport { collection, addDoc, setDoc, db, doc, getDocs } from \"./config\";\r\n\r\nexport const fetchUser = async (uid) => {\r\n  try {\r\n    const docRef = doc(db, \"users\", `${uid}`);\r\n    const docData = await getDoc(docRef);\r\n    return docData.data();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const addNotes = (uid, data) => {\r\n  try {\r\n    const docRef = doc(db, \"users\", `${uid}`);\r\n    const colRef = collection(docRef, \"notes\");\r\n    addDoc(colRef, {\r\n      note: data,\r\n    });\r\n    console.log(\"Note Added Successfully\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchNotes = async (uid) => {\r\n  try {\r\n    const docRef = doc(db, \"users\", `${uid}`);\r\n    const colRef = collection(docRef, \"notes\");\r\n    const snapshot = await getDocs(colRef);\r\n    snapshot.forEach((doc) => {\r\n      console.log(doc);\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const addUser = async (user) => {\r\n  const { displayName, email, uid } = user;\r\n  console.log(user);\r\n  try {\r\n    await setDoc(doc(db, \"users\", `${uid}`), {\r\n      uid: uid,\r\n      name: displayName || \"\",\r\n      email: email,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}